1-creacion del navbar con bootstrap, css y JavaScript. El mismo se oscurece cuando se genera un scroll vertical en la pantalla, es decir, se agrega un evento de desplazamiento (scroll) utilizando el metodo addEventListener.

2-creacion de barra buscadora, se uso css para estilos. Al hacer 'scroll' se posiciona en el navbar dentro de un 'div'. Para lograrlo se creo un segundo 'search' la cual se la da posicionamiento y desplega lista de opciones al activarse el envento 'keyup' al usuario precionar y soltar dentro del input, con la propiedad 'target.value' se obtiene el valor del campo.

3-dibujar data en el DOM, utilizando un 'querySelector'. Se pudo acceder al elemento html a partir del array 'data' la cual es recorrida por un forEach, se acumulan todas las cadenas del objeto y  el contenido se inserta en el 'contenedor' utilizando un 'innerHTML'.

4-localStorage, con un 'setItem' se almacenan los datos en formato JSON, luego con el 'getItem' comprueba primero si hay algun dato almacenado en el storage y si es verddero convierte la cadena de texto (JSON) en un objeto JavaScript para que pueda ser leida por el navegador.

5-Portada, se utlizo la propiedad CSS flex para darle flexibilidad ya que se requiere que tanto la imagen como el texto sean proporcionales en medida 'flex: 1 1 21rem'


6-contenedor de productos, se hizo uso de la propiedad 'grid' el cual organizara los elementos dentro del contenedor en cuadricula donde haciendo uso de 'grid-template-culums', 'repeat();, 'auto-fit' y 'gap' las columnasse adaptan al ancho del contendor (dentro imagen y texto) por lo tanto la imagen no se desborda ni se desfigura. Se aplicaron mediasqueries respectivas para el responsive.

7-Logo car:
    -Contenido Productos, se aplico estilo y 'position:absolute' para que se posiciones siempre en la parte inferior derecha del .box a la cual se le asigno 'position: relative' para que el icono tome de referencia y se posicione.
    -Dentro del Nav, varia comportamiento del icono llamando a un evento 'click' para que desaparezca cuando del menu cuando esta en modo 'hamburgueza', una vez que aumenta la medida de la pantalla este aprecera en el menu de opciones haciendo uso del evento 'resize' el cual se activara cuando el tama;o de pantalla sea <991.

8- Renderizacion de productos en la cart.html donde se hizo uso de DOMContentLoaded y JSON para que se guarden cuando se resetea la pagina (index y cart).

9-Funcion eliminar producto, donde se recibio por parametro 'productoid', donde al darle click el usuario sucede lo siguiente:
    1-findIndex:Devuelve el indide del 1er elemento a eliminar.
    2-carrito[item].cantidad--,el producto devuelvo por cada click restara una cantidad
    3-if (carrito[item].cantidad === 0), cuando el producto llegue a CERO cantidad:
    4-const nuevaLista = carrito.filter( (producto) => producto.id !== productoid), este sera filtrado para sacarlo de la lista y se creara un nuevo array carrito = nuevaLista.

10-Funcion actualizar total, calcula y muestra el costo total del carrito de compras. Se utilizo el metodo 'reduce' que va sumando el precio total de cada producto (precio*cant) y se almacena en la VARIABLE 'acc' la cual arranca en CERO, al final el ciclo devuelve el costo toal de todos los productos.


    